"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require('express');
var router = express.Router();
var userController = require('../controllers/userController');
var adminDashboardController = require('../controllers/adminDashboardController');
var articlesController = require('../controllers/articlesContoller');
var subscriptionsController = require('../controllers/subscriptionController');
var metricsController = require('../controllers/metricsControllers');
var notificationsController = require('../controllers/notificationsController');
var publisherDashboardController = require('../controllers/publisherDashboard');
var advancerDashboardController = require('../controllers/advancerDashboardController');
var landingPageController = require('../controllers/landingPageController');
var protect = require('../middleware/authMiddleware');
var multer = require('multer');
var upload = multer();
//all users endpoints
router.post('/user/login', userController.logIn);
router.post('/user/register', userController.register);
router.post('/user/forgotPassword', userController.forgotPassword);
router.put('/user/resetPassword', userController.resetPassword);
router.post('/user/googleAuth', userController.authenticateGoogleUser);
router.post('/user/GetGoogleTokens', userController.GetGoogleTokens);
router.post('/user/GetGoogleCredentials', userController.GetGoogleCredentials);
router.post('/user/registerPublisher', protect.protect, userController.registerPublisher);
router.put('/user/updatePassword/:id', protect.protect, userController.updatePassword);
router.post('/user/uploadMedia', protect.protect, upload.single('file'), userController.uploadMedia);
router.get('/user/getMedia/:container/:id', protect.protect, userController.getUploadedMedia);
router.delete('/user/deleteUploadedMedia/:container/:filename/:id', protect.protect, userController.deleteUploadedMedia);
router.put('/user/updateUploadedMedia/:container/:filename/:id', protect.protect, upload.single('file'), userController.updateUploadedMedia);
router.post('/user/sendDeleteAccountToken', protect.protect, userController.sendDeleteAccountToken);
router.delete('/user/deleteAccount', protect.protect, userController.deleteAccount);
router.put('/user/deactivateAccount/:id', protect.protect, userController.deactivateAccount);
// all users endpoints
router.get('/', userController.welcome);
module.exports = router;
