{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Minority africa backend documentation",
        "description": "This is a simple API application made with Express and documented with Swagger",
        "contact": {
            "name": "Minority Africa",
            "url": "https://minorityafrica.org/",
            "email": "manority@minorityafrica.org"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [{
            "bearerAuth": []
        }],
    "servers": [
        {
            "url": "http://localhost:4001",
            "description": "Local Dev"
        },
        {
            "url": "https://advanced-backend.azurewebsites.net",
            "description": "Development Server"
        },
        {
            "url": "https://advance-api.azurewebsites.net",
            "description": "Live Server"
        }
    ],
    "tags": [
        {
            "name": "Users",
            "description": "API to manage Users"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/user/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow user to login",
                "requestBody": {
                    "description": "login object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/UserLogin"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow user to create new account",
                "requestBody": {
                    "description": "registration object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/user/registerPublisher": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow user to become publishers",
                "requestBody": {
                    "description": "registration object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Publisher"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Publisher"
                        }
                    }
                }
            }
        },
        "/user/uploadMedia": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow the user to upload media files",
                "requestBody": {
                    "description": "upload media file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/definitions/mediaFile"
                            }
                        }
                    }
                },
                "produces": [
                    "multipart/form-data"
                ],
                "responses": {
                    "200": {
                        "description": "image uploaded successfully"
                    }
                }
            }
        },
        "/user/deleteUploadedMedia/{container}/{filename}/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "get the media uploaded",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container",
                        "required": true,
                        "description": "container name"
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "description": "filename for either article or profile pic"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "id for either article media or profile picture"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/updateUploadedMedia/{container}/{filename}/{id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow the user to update uploaded media files",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container",
                        "required": true,
                        "description": "container name"
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "description": "filename for either article or profile pic"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "id for either article media or profile picture"
                    }
                ],
                "requestBody": {
                    "description": "upload media file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/definitions/updateMediaFile"
                            }
                        }
                    }
                },
                "produces": [
                    "multipart/form-data"
                ],
                "responses": {
                    "200": {
                        "description": "image uploaded successfully"
                    }
                }
            }
        },
        "/user/getMedia/{container}/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "get the media uploaded",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container",
                        "required": true,
                        "description": "container name"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "filename for either article or profile pic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/updatePassword/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "update password in the system",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User id"
                    }
                ],
                "requestBody": {
                    "description": "password object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/UpdatePassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/forgotPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow user to request a reset password token",
                "requestBody": {
                    "description": "forgot password object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/forgotPassword"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Please check your emails"
                    }
                }
            }
        },
        "/user/sendDeleteAccountToken": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow user to request a delete account token",
                "requestBody": {
                    "description": "delete account  object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/forgotPassword"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Please check your emails"
                    }
                }
            }
        },
        "/user/resetPassword": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow user to reset password",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "description": "Token sent to the user email",
                        "type": "string"
                    }
                ],
                "requestBody": {
                    "description": "reset password object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/resetPassword"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User password updated successfully"
                    }
                }
            }
        },
        "/user/deleteAccount": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow user to delete account",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "description": "Token sent to the user email",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User account deleted successfully"
                    }
                }
            }
        },
        "/user/deactivateAccount/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "deactive user account in the system",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User id"
                    }
                ],
                "requestBody": {
                    "description": "password and role object, role should be publisher or admin",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/adminPassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/googleAuth": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow user to sign/signUp using google account",
                "requestBody": {
                    "description": "google auth object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/googleAuth"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successfully authicated google user"
                    }
                }
            }
        },
        "/user/GetGoogleTokens": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Allow the front end to get user google tokens",
                "requestBody": {
                    "description": "google code object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/GoogleCode"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successfully authicated google user"
                    }
                }
            }
        },
        "/user/GetGoogleCredentials": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets google credentials of a user",
                "requestBody": {
                    "description": "google auth object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/GoogleRefreshToken"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successfully authicated google user"
                    }
                }
            }
        },
        "/user/updateProfile/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "update user Profile in the system",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User id"
                    }
                ],
                "requestBody": {
                    "description": "user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/UpdateUserObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                }
            }
        },
        "GoogleCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "GoogleRefreshToken": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "Advancer": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "applicationPassword": {
                    "type": "string"
                },
                "wordpressAdminName": {
                    "type": "string"
                }
            }
        },
        "Publisher": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "organisation": {
                    "type": "string"
                }
            }
        },
        "sendEmail": {
            "type": "object",
            "properties": {
                "recieverMail": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "UpdateUserObject": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "UpdatePassword": {
            "type": "object",
            "properties": {
                "currentPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "UserLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "PublisherId": {
            "type": "object",
            "properties": {
                "publisherUserId": {
                    "type": "string"
                }
            }
        },
        "mediaFile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "container": {
                    "type": "string"
                },
                "file": {
                    "type": "file"
                }
            }
        },
        "updateMediaFile": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "file"
                }
            }
        },
        "forgotPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "googleAuth": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/User"
                    }
                }
            }
        }
    }
}
